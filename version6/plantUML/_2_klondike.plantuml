@startuml

class Klondike {
  - cardMoveStrategy: CardMoveStrategy

  + setCardMoveStrategy(strategy: CardMoveStrategy)
  + moveCard(card: Card, target: Target)
}

class CardMoveStrategy {
  {abstract} moveCard(card: Card, target: Target)
}

class MoveToTableauStrategy {
  + moveCard(card: Card, tableau: Tableau)
}

class MoveToFoundationStrategy {
  + moveCard(card: Card, foundation: Foundation)
}

class DrawFromStockStrategy {
  + moveCard(stock: Stock, target: Target)
}

class Card {
  - suit: String
  - value: String | Number
  - isFaceUp: boolean
}

class Stock {
  - suit: String
  - cards: Card[]
}

class Foundation {
  - suit: String
  - cards: Card[]
}

class Tableua {
  - suit: String
  - cards: Card[]
}

Klondike --|> CardMoveStrategy
Klondike --> Foundation
Klondike --> Stock
Klondike --> Tableua
MoveToTableauStrategy <|-- CardMoveStrategy
MoveToFoundationStrategy <|-- CardMoveStrategy
DrawFromStockStrategy <|-- CardMoveStrategy
Klondike "1" --> "1" CardStack
CardStack "1" --> "52" Card
Klondike "1" --> "1" Stock
Stock "1" --> "1" Waste
Klondike "1" --> "1" Foundation
Foundation "1" --> "4" Foundations
Tableua "1" --> "7" Tableuas

note left of Klondike
  Aplicaci贸n de patrones:
  - Patr贸n de Comando para las acciones del jugador.
  - Patr贸n de Estrategia para las reglas de movimiento.
  - Patr贸n de Estado para gestionar los estados del juego.
end note

@enduml
