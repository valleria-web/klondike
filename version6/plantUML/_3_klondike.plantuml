@startuml Klondike_version_3
class Stock {
  - cards: deck

  + Stock()
  + createAndShuffleDeck(): deck
  + shuffleDeck(deck: List<Card>)
}

class Tableau {
  - tableaus: []
  + Tableau(stock: Stock)
  + distributeCards(stock: Stock): void
}

class Klondike {
  - deck : deck
  - stock: Stock(deck)
  - waste: Waste
  - foundations: Foundation
  - tableaus: Tableau
  + Klondike()
}

class Card {
  - suit: String[]
  - value: String[]
  - isFaceUp: boolean
  + Card(suit: String, value: String, isFaceUp: boolean = false)
  + flip(): void
}

class Foundation {
  - foundations: []
  + Foundation(stock: Stock)
}

class Waste {
  - pile: []
  + Waste(stock: Stock)
}

Stock --> "1" Card : Contains
Tableau -[dotted]-> "1" Stock : Uses
Klondike *-- Stock : has
Klondike *-- Waste : has
Klondike *-- Foundation : has
Klondike *-- Tableau : has
Foundation --[dotted]-> "1" Stock : Uses
Waste --[dotted]-> "1" Stock : Uses

@enduml
